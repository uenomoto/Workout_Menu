<div class="container">
  <div class="row mt-3">
    <div class="col-sm-12">
       <h1 class="font-weight-bold text-center">メニューチェック表</h1>
       <div class="col-sm-12 text-center mt-4 mb-4">
         <p class="text-primary">インターバルとしてお使いください</p>
        <input type='text' id='view' readonly>
        <div class="mt-3">
          <button id='start'>START</button>
          <button id='reset'>RESET</button>
        </div>
       </div>
    </div>
  </div>
  <div class="row">
    <div class="col-sm-12">
      <table class="table table-borderless">

      <thead class="thead-dark">
        <tr>
          <th>チェック</th>
          <th>トレ名</th>
          <th>部位</th>
          <th>レップ×セット</th>
          <th>トレ状態</th>
        </tr>
      </thead>

       <tbody>
         <% @training_menus.each do |menu| %>
        <tr>
         <td><%= check_box :training_menu, :completion, {class: "check_box"}, true, false %></td>
         <td><%= menu.training_name.name %></td>
         <td><%= menu.training_name.genre.name %></td>
         <td><%= menu.count %>×<%= menu.set %></td>
         <td>
           <% if menu.completion == false %>
           <p>頑張ろう！</p>
           <% else %>
           <p>終了！</p>
           <% end %>
           </td>
        </tr>
        <% end %>
        </tbody>
      </table>
        <div class="row m-3">
          <div class="col-sm-12 text-center">
           <%= form_with model: @training_menu, url: complete_path, method: :patch do |f| %>

           <button type="submit" id="btn" value="完了!!" class="btn btn-success col-lg-6 col-md-6">完了!!</button>
           <% end %>
          </div>
        </div>
    </div>
  </div>
</div>

<script>
'use strict';
const
    view     = document.getElementById('view'),
    startBtn = document.getElementById('start'),
    resetBtn = document.getElementById('reset');

let startTime = 0;

window.addEventListener('turbolinks:load', function() {
    const e = window.ontouchstart !== undefined ? 'touchstart' : 'mousedown';
    startBtn.addEventListener(e, clickStart);
    resetBtn.addEventListener(e, clickReset);
    view.value = timeFormat(0);
});

// STARTボタン押下時
function clickStart() {
    // 停止状態なら
    if(startTime <= 0) {
        // 計測開始
        startTime += Date.now();
        timePrint();
        startBtn.textContent = 'STOP';
        resetBtn.disabled = true;
    }
    // 計測中なら
    else {
        // 停止
        startTime -= Date.now();
        startBtn.textContent = 'START';
        resetBtn.disabled = false;
    }
}

// RESETボタン押下時
function clickReset() {
    // 停止状態なら
    if(startTime < 0) {
        // リセット
        startTime = 0;
        view.value = timeFormat(0);
    }
}

// 時間表示
function timePrint() {
    if(startTime > 0) {
        view.value = timeFormat(Date.now() - startTime);
        requestAnimationFrame(timePrint);
    }
}

// 表示フォーマット
function timeFormat(t) {
    return Math.floor(t / 36e5) + new Date(t).toISOString().slice(13, 23);
}
</script>

<script>
// 全てチェックするとボタンが活性化する
$(function(){
$(':checkbox').on('change',function(){
$('#btn').prop('disabled',$(':checkbox:not(:checked)').length>0);
}).eq(0).trigger('change');

});
</script>
